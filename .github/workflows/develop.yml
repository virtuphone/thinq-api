# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy Beta

on:
  push:
    branches: [ develop ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN -g
      env:
        NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
    - run: yarn
    - run: yarn build
    - name: Configure Git
      run: |
        git config --global user.email "github@virtuphone.com"
        git config --global user.name "GitHub Actions"
    - name: Increment Beta Version
      run: |
        CURRENT_VERSION=$(node -pe "require('./package.json').version")
        BETA_REGEX="[0-9]+\.[0-9]+\.[0-9]+\-beta\.[0-9]+"
        if [[ ${CURRENT_VERSION} =~ ${BETA_REGEX} ]];
        then
          npm --no-git-tag-version version prerelease --preid=beta
        else
          npm --no-git-tag-version version preminor --preid=beta
        fi
        CURRENT_VERSION=$(node -pe "require('./package.json').version")
        git commit -a -m $"Build ${CURRENT_VERSION}" -m "[skip ci]"
        git push --set-upstream origin develop
    - name: Publish Beta
      run: npm publish --tag beta --access public
    - run: npm config set //npm.pkg.github.com/:_authToken=$NPM_TOKEN -g
      env:
        NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish Beta to github
      run: npm publish --tag beta --access public --registry=https://npm.pkg.github.com


